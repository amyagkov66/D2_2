py manage.py migrate

py manage.py shell

from newapp.models import *
user1 = User.objects.create(username='Mike', first_name='Frank')
Author.objects.create(authorUser=user1)
user2 = User.objects.create(username='Andrew', first_name='Myagk')
Author.objects.create(authorUser=user2)
Category.objects.create(name='IT')
Category.objects.create(name='Education')
еще две

Post.objects.create(author=Author.objects.get(authorUser=User.objects.get(username='Mike')), categoryType='NW', title='any title', text='any text')
Post.objects.create(author=Author.objects.get(authorUser=User.objects.get(username='Mike')), categoryType='AR', title='any title555', text='any text55555555')
Post.objects.create(author=Author.objects.get(authorUser=User.objects.get(username='Mike')), categoryType='AR', title='any titleeeeee', text='anyeeeeee text')
Post.objects.create(author=Author.objects.get(authorUser=User.objects.get(username='Andrew')), categoryType='NW', title='any titl4444e', text='any 44444 text')

p1 = Post.objects.get(pk=1)
p2 = Post.objects.get(pk=2)
p3 = Post.objects.get(pk=3)

c1 = Category.objects.get(name='IT')
c2 = Category.objects.get(name='Education')

p1.postCategory.add(c1)
p2.postCategory.add(c1, c2)
p3.postCategory.add(c3)

Comment.objects.create(commentUser=User.objects.get(username='Mike'), commentPost=Post.objects.get(pk=1), text='comment text1')
Comment.objects.create(commentUser=User.objects.get(username='Mike'), commentPost=Post.objects.get(pk=2), text='comment t33ext1')
Comment.objects.create(commentUser=User.objects.get(username='Andrew'), commentPost=Post.objects.get(pk=3), text='comment33333 text1')

Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=2).dislike()
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=3).like()

Comment.objects.get(pk=1).like()
Comment.objects.get(pk=1).like()
Comment.objects.get(pk=1).like()
Comment.objects.get(pk=2).dislike()
Comment.objects.get(pk=3).like()


Author.objects.get(authorUser=User.objects.get(username='Mike')).update_rating()
Author.objects.get(authorUser=User.objects.get(username='Andrew')).update_rating()

a=Author.objects.get(authorUser=User.objects.get(username='Mike'))
a.ratingAuthor

Author.objects.get(authorUser=User.objects.get(username='Andrew')).ratingAuthor

best = Author.objects.all().order_by('-ratingAuthor').values('authorUser', 'ratingAuthor')[0]

print(best)







